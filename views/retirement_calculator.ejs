<%- include('partials/header') %>

<div class="form-card">
    <h3 class="mb-5">Retirement Planning Calculator</h3>
    <div class="row g-5">
        <!-- Left Column: Inputs (এই অংশটি ঠিক আছে) -->
        <div class="col-lg-5">
            <h5 class="mb-3">Your Details</h5>
            <div class="slider-container"><div class="row align-items-center"><div class="col-md-6"><label for="currentAgeInput" class="form-label mb-0">Current Age</label></div><div class="col-md-6"><div class="input-group"><input type="number" class="form-control" id="currentAgeInput" min="18" max="60" placeholder="e.g., 30"><span class="input-group-text">Yrs</span></div></div></div><input type="range" min="18" max="60" class="form-range mt-2" id="currentAgeSlider"></div>
            <div class="slider-container"><div class="row align-items-center"><div class="col-md-6"><label for="retirementAgeInput" class="form-label mb-0">Retirement Age</label></div><div class="col-md-6"><div class="input-group"><input type="number" class="form-control" id="retirementAgeInput" min="40" max="70" placeholder="e.g., 60"><span class="input-group-text">Yrs</span></div></div></div><input type="range" min="40" max="70" class="form-range mt-2" id="retirementAgeSlider"></div>
            <div class="slider-container"><div class="row align-items-center"><div class="col-md-6"><label for="monthlyExpensesInput" class="form-label mb-0">Current Monthly Expenses</label></div><div class="col-md-6"><div class="input-group"><span class="input-group-text">₹</span><input type="number" class="form-control" id="monthlyExpensesInput" min="0" step="1000" placeholder="e.g., 50,000"></div></div></div><input type="range" min="0" max="200000" step="1000" class="form-range mt-2" id="monthlyExpensesSlider"></div>
            <div class="slider-container"><div class="row align-items-center"><div class="col-md-6"><label for="currentSavingsInput" class="form-label mb-0">Current Retirement Savings</label></div><div class="col-md-6"><div class="input-group"><span class="input-group-text">₹</span><input type="number" class="form-control" id="currentSavingsInput" min="0" step="10000" placeholder="e.g., 5,00,000"></div></div></div><input type="range" min="0" max="10000000" step="10000" class="form-range mt-2" id="currentSavingsSlider"></div>
            <div class="slider-container"><div class="row align-items-center"><div class="col-md-6"><label for="monthlyContributionInput" class="form-label mb-0">Monthly Contribution</label></div><div class="col-md-6"><div class="input-group"><span class="input-group-text">₹</span><input type="number" class="form-control" id="monthlyContributionInput" min="0" step="500" placeholder="e.g., 20,000"></div></div></div><input type="range" min="0" max="100000" step="500" class="form-range mt-2" id="monthlyContributionSlider"></div>
            <hr class="my-4"><h5 class="mb-3">Financial Assumptions</h5>
            <div class="slider-container"><div class="row align-items-center"><div class="col-md-6"><label for="inflationRateInput" class="form-label mb-0">Inflation Rate</label></div><div class="col-md-6"><div class="input-group"><input type="number" class="form-control" id="inflationRateInput" min="0" max="15" step="0.5" value="6"><span class="input-group-text">%</span></div></div></div><input type="range" min="0" max="15" step="0.5" value="6" class="form-range mt-2" id="inflationRateSlider"></div>
            <div class="slider-container"><div class="row align-items-center"><div class="col-md-6"><label for="preRetirementReturnInput" class="form-label mb-0">Return Rate (Pre-Retirement)</label></div><div class="col-md-6"><div class="input-group"><input type="number" class="form-control" id="preRetirementReturnInput" min="0" max="25" step="0.5" value="12"><span class="input-group-text">%</span></div></div></div><input type="range" min="0" max="25" step="0.5" value="12" class="form-range mt-2" id="preRetirementReturnSlider"></div>
            <div class="slider-container"><div class="row align-items-center"><div class="col-md-6"><label for="postRetirementReturnInput" class="form-label mb-0">Return Rate (Post-Retirement)</label></div><div class="col-md-6"><div class="input-group"><input type="number" class="form-control" id="postRetirementReturnInput" min="0" max="15" step="0.5" value="7"><span class="input-group-text">%</span></div></div></div><input type="range" min="0" max="15" step="0.5" value="7" class="form-range mt-2" id="postRetirementReturnSlider"></div>
        </div>
        
        <!-- Right Column: Results (এই অংশটি ঠিক আছে) -->
        <div class="col-lg-7 d-flex flex-column">
            <div id="initialState" class="d-flex flex-grow-1 align-items-center justify-content-center h-100 text-center text-muted p-4" style="background-color: #f8f9fa; border-radius: 12px;"><h4>Enter your details to plan your retirement.</h4></div>
            <div id="resultsState" class="flex-grow-1" style="display: none;">
                <div class="row"><div class="col-md-6"><div class="summary-card"><div class="label">Retirement Corpus Needed</div><div class="value text-primary" id="corpusNeeded">₹0</div></div></div><div class="col-md-6"><div class="summary-card"><div class="label">Projected Corpus</div><div class="value text-success" id="corpusProjected">₹0</div></div></div></div>
                <div id="verdict" class="alert mt-3 text-center"></div>
                <div class="row mt-4"><div class="col-md-7"><div class="chart-container"><h4 class="chart-title">Corpus Comparison</h4><canvas id="corpusBarChart"></canvas></div></div><div class="col-md-5"><div class="chart-container"><h4 class="chart-title">Projected Corpus Breakdown</h4><canvas id="corpusPieChart"></canvas></div></div></div>
            </div>
        </div>
    </div>
    
    <!-- Yearly Breakdown -->
    <div id="yearlyBreakdownSection" class="mt-5" style="display: none;">
        <h4 class="text-center mb-4">Year-by-Year Growth Projection</h4>
        <div class="table-responsive"><table class="table table-striped table-bordered text-center"><thead class="table-dark"><tr><th>Age</th><th>Starting Balance</th><th>Contributions</th><th>Growth</th><th>Ending Balance</th></tr></thead><tbody id="yearlyBreakdownBody"></tbody></table></div>
    </div>

    <!-- তথ্য সেকশন (এই অংশটি ঠিক আছে) -->
    <div class="info-accordion">
        <div class="accordion" id="calculatorInfoAccordion">
            <div class="accordion-item"><h2 class="accordion-header" id="headingOne"><button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">How to Use This Calculator</button></h2><div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#calculatorInfoAccordion"><div class="accordion-body"><ol><li><strong>Enter Your Details:</strong> Input your current age, desired retirement age, and current monthly expenses.</li><li><strong>Input Your Savings:</strong> Provide your existing retirement savings and how much you contribute monthly.</li><li><strong>Adjust Assumptions:</strong> Fine-tune the financial assumptions like inflation and expected investment returns before and after retirement. These are crucial for an accurate projection.</li><li><strong>Analyze the Verdict:</strong> The calculator instantly shows the required corpus vs. your projected corpus. It will give you a clear verdict and an actionable suggestion if there's a shortfall.</li></ol></div></div></div>
            <div class="accordion-item"><h2 class="accordion-header" id="headingTwo"><button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">Understanding the Metrics</button></h2><div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#calculatorInfoAccordion"><div class="accordion-body"><p><strong>Retirement Corpus Needed:</strong> This is your ultimate goal. It's the total amount of money you need to accumulate by your retirement age to sustain your desired lifestyle, adjusted for future inflation.</p><p><strong>Projected Corpus:</strong> This is your financial forecast. It's the amount you are on track to accumulate based on your current savings, monthly contributions, and expected returns.</p><p><strong>The Verdict (Shortfall/Surplus):</strong> This shows the gap between your goal and your forecast. A surplus is great, but a shortfall is an opportunity to adjust your plan.</p><p><strong>Actionable Suggestion:</strong> This calculator doesn't just show you the problem; it offers a solution by calculating the new monthly contribution required to bridge the gap and reach your goal.</p></div></div></div>
            <div class="accordion-item"><h2 class="accordion-header" id="headingThree"><button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">The Ultimate Guide to Retirement Planning</button></h2><div id="collapseThree" class="accordion-collapse collapse" aria-labelledby="headingThree" data-bs-parent="#calculatorInfoAccordion"><div class="accordion-body"><p class="lead">Retirement planning is not about stopping work; it's about achieving the financial freedom to live life on your own terms. A solid plan, created early, is the most reliable path to a stress-free and secure future.</p><hr><h4>Why is Retirement Planning So Important?</h4><ul><li><strong>Rising Cost of Living (Inflation):</strong> The money that seems sufficient today will have significantly less purchasing power in the future. Planning helps you build a corpus that outpaces inflation.</li><li><strong>Increased Life Expectancy:</strong> People are living longer than ever. A larger retirement corpus is needed to support a longer post-retirement life.</li><li><strong>Lack of Social Security:</strong> Unlike in many Western countries, India's social security system for retirees is limited, making personal savings paramount.</li><li><strong>Medical Emergencies:</strong> Healthcare costs tend to rise significantly with age. A well-funded retirement plan ensures you are prepared.</li></ul><h4>The Two Pillars of This Calculator</h4><p>This advanced calculator works on two fundamental principles:</p><ol><li><strong>Calculating Your Goal (Required Corpus):</strong> First, it calculates your future expenses by applying the inflation rate to your current monthly expenses. Then, it determines the total corpus you'll need to generate that monthly income for the rest of your life, assuming your money continues to grow at a conservative post-retirement rate.</li><li><strong>Projecting Your Journey (Projected Corpus):</strong> Second, it uses the power of compounding to forecast the future value of your investments. It calculates the growth of your current savings (as a lumpsum) and your future monthly contributions (as a SIP), both growing at your pre-retirement return rate.</li></ol><blockquote class="blockquote bg-light p-3 rounded">The magic of this tool is that it compares your goal with your journey in real-time and gives you a clear, actionable path to bridge any gap.</blockquote><h4>Smart Tips for a Successful Retirement Plan</h4><ul><li><strong>Start Early, Even if Small:</strong> The most powerful asset you have is time. Thanks to compounding, a small amount invested in your 20s can grow to be much larger than a big amount invested in your 40s.</li><li><strong>Increase Your Contributions Annually:</strong> Don't keep your monthly contribution static. Aim to increase it by 5-10% every year as your salary grows. This is called a "Step-Up SIP" and can dramatically accelerate your corpus growth.</li><li><strong>Choose the Right Asset Allocation:</strong> When you're young, you can afford to take more risks by investing in equities (like mutual funds) for higher returns. As you near retirement, gradually shift your portfolio towards safer assets like debt funds or fixed deposits.</li><li><strong>Review Your Plan Annually:</strong> Life changes, and so should your financial plan. Review your retirement goal and your investment progress at least once a year to ensure you are still on track.</li></ul></div></div></div>
        </div>
    </div>
</div>

<!-- JavaScript (বাগ ফিক্স করা হয়েছে) -->
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const ids = ['currentAge', 'retirementAge', 'monthlyExpenses', 'currentSavings', 'monthlyContribution', 'inflationRate', 'preRetirementReturn', 'postRetirementReturn'];
        const inputs = {}, sliders = {};
        ids.forEach(id => { inputs[id] = document.getElementById(id + 'Input'); sliders[id] = document.getElementById(id + 'Slider'); });
        const initialState = document.getElementById('initialState'), resultsState = document.getElementById('resultsState'), yearlyBreakdownSection = document.getElementById('yearlyBreakdownSection');
        const corpusNeededEl = document.getElementById('corpusNeeded'), corpusProjectedEl = document.getElementById('corpusProjected'), verdictEl = document.getElementById('verdict');
        const barCanvas = document.getElementById('corpusBarChart'), pieCanvas = document.getElementById('corpusPieChart'), yearlyBreakdownBody = document.getElementById('yearlyBreakdownBody');
        let barChart, pieChart;
        const formatCurrency = (num) => new Intl.NumberFormat('en-IN', { style: 'currency', currency: 'INR', minimumFractionDigits: 0, maximumFractionDigits: 0 }).format(num);
        function calculateAndDisplay() {
            const currentAge = parseInt(inputs.currentAge.value); const retirementAge = parseInt(inputs.retirementAge.value); const monthlyExpenses = parseFloat(inputs.monthlyExpenses.value);
            if (isNaN(currentAge) || isNaN(retirementAge) || isNaN(monthlyExpenses) || currentAge >= retirementAge || monthlyExpenses <= 0) { initialState.style.display = 'flex'; resultsState.style.display = 'none'; yearlyBreakdownSection.style.display = 'none'; if (barChart) barChart.destroy(); if (pieChart) pieChart.destroy(); return; }
            initialState.style.display = 'none'; resultsState.style.display = 'block'; yearlyBreakdownSection.style.display = 'block';
            const P = parseFloat(inputs.currentSavings.value) || 0; const M = parseFloat(inputs.monthlyContribution.value) || 0;
            const inflation = parseFloat(inputs.inflationRate.value) / 100; const r_pre = parseFloat(inputs.preRetirementReturn.value) / 100; const r_post = parseFloat(inputs.postRetirementReturn.value) / 100; const yearsToRetire = retirementAge - currentAge;
            const futureMonthlyExpenses = monthlyExpenses * Math.pow(1 + inflation, yearsToRetire);
            const realPostRetirementReturn = (r_post - inflation) / (1 + inflation); let requiredCorpus = 0;
            if (realPostRetirementReturn > 0) { requiredCorpus = (futureMonthlyExpenses * 12) / realPostRetirementReturn; } else { requiredCorpus = futureMonthlyExpenses * 12 * 25; }
            const i_pre = r_pre / 12; const n = yearsToRetire * 12; const fv_of_P = P * Math.pow(1 + r_pre, yearsToRetire);
            const fv_of_M = n > 0 ? M * ((Math.pow(1 + i_pre, n) - 1) / i_pre) * (1 + i_pre) : 0;
            const projectedCorpus = fv_of_P + fv_of_M; const shortfall = requiredCorpus - projectedCorpus;
            if (shortfall <= 0) { verdictEl.className = 'alert alert-success mt-3 text-center'; verdictEl.innerHTML = `Congratulations! You are on track to meet your retirement goal with a surplus of <strong>${formatCurrency(Math.abs(shortfall))}</strong>.`; }
            else { verdictEl.className = 'alert alert-warning mt-3 text-center'; const fv_factor = n > 0 ? ((Math.pow(1 + i_pre, n) - 1) / i_pre) * (1 + i_pre) : 0; const newMonthlyContribution = fv_factor > 0 ? (requiredCorpus - fv_of_P) / fv_factor : M; verdictEl.innerHTML = `You have a shortfall of <strong>${formatCurrency(shortfall)}</strong>. To reach your goal, you need to increase your monthly contribution to <strong>${formatCurrency(newMonthlyContribution > 0 ? newMonthlyContribution : M)}</strong>.`; }
            corpusNeededEl.textContent = formatCurrency(requiredCorpus); corpusProjectedEl.textContent = formatCurrency(projectedCorpus);
            if (barChart) barChart.destroy(); if (pieChart) pieChart.destroy();
            barChart = new Chart(barCanvas, { type: 'bar', data: { labels: ['Required', 'Projected'], datasets: [{ data: [requiredCorpus, projectedCorpus], backgroundColor: ['#ef5350', '#66bb6a'] }] }, options: { indexAxis: 'y', plugins: { legend: { display: false } }, scales: { x: { ticks: { callback: (v) => v / 100000 + 'L' } } } } });
            const totalContributions = P + (M * n); const totalGrowth = projectedCorpus - totalContributions;
            pieChart = new Chart(pieCanvas, { type: 'doughnut', data: { labels: ['Total Contributions', 'Wealth Gained'], datasets: [{ data: [totalContributions, totalGrowth], backgroundColor: ['#0d6efd', '#198754'] }] }, options: { plugins: { legend: { display: false } } } });
            yearlyBreakdownBody.innerHTML = ''; let balance = P;
            for (let yr = 1; yr <= yearsToRetire; yr++) {
                const start = balance; const cont = M * 12; const growth = (balance + cont) * r_pre; balance += cont + growth;
                // ### বাগ ফিক্স এখানে ###
                const row = `<tr><td>${currentAge + yr}</td><td>${formatCurrency(start)}</td><td>${formatCurrency(cont)}</td><td>${formatCurrency(growth)}</td><td>${formatCurrency(balance)}</td></tr>`;
                yearlyBreakdownBody.innerHTML += row;
            }
        }
        function syncAndCalculate(source, target) { if (target) target.value = source.value; calculateAndDisplay(); }
        ids.forEach(id => { if (sliders[id]) sliders[id].addEventListener('input', () => syncAndCalculate(sliders[id], inputs[id])); if (inputs[id]) inputs[id].addEventListener('input', () => syncAndCalculate(inputs[id], sliders[id])); });
        calculateAndDisplay();
    });
</script>

<%- include('partials/footer') %>